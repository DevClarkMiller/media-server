{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\media-server\\\\media-server-front-end\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Routes, Route } from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nimport fetchAll from './functions/fetch';\nimport { createContext } from 'react';\n\n//Components\nimport Header from \"./components/Header\";\nimport Content from \"./components/Content\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FileContext = /*#__PURE__*/createContext();\nfunction App() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [renderedFiles, setRendererdFiles] = useState([]);\n\n  //On the first render, retrieve all of the users files\n  useEffect(() => {\n    const getFiles = async () => {\n      const response = await fetchAll.get('/media', {\n        email: \"clarkmillermail@gmail.com\"\n      });\n      if (response) {\n        setFiles(response.data);\n      }\n    };\n    getFiles();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App flex flex-col items-center bg-deepBlack min-h-screen gap-5 pt-5\",\n    children: /*#__PURE__*/_jsxDEV(FileContext.Provider, {\n      value: {\n        files,\n        setFiles\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Content, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZDqsOUX2nA4TE8L5QuyQioNDMEE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Routes","Route","useEffect","useState","fetchAll","createContext","Header","Content","jsxDEV","_jsxDEV","FileContext","App","_s","files","setFiles","renderedFiles","setRendererdFiles","getFiles","response","get","email","data","className","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/projects/media-server/media-server-front-end/src/App.js"],"sourcesContent":["import {Routes, Route} from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nimport fetchAll from './functions/fetch';\nimport { createContext } from 'react';\n\n//Components\nimport Header from \"./components/Header\";\nimport Content from \"./components/Content\";\n\nexport const FileContext = createContext();\n\nfunction App() {\n  const [files, setFiles] = useState([]);\n  const [renderedFiles, setRendererdFiles] = useState([]);\n\n    //On the first render, retrieve all of the users files\n    useEffect(() =>{\n        const getFiles = async () =>{\n            const response = await fetchAll.get('/media', {email: \"clarkmillermail@gmail.com\"});\n            if(response){\n              setFiles(response.data);\n            }\n        }\n\n        getFiles();\n    }, []);\n\n  return (\n    <div className=\"App flex flex-col items-center bg-deepBlack min-h-screen gap-5 pt-5\">\n      <FileContext.Provider value={{files, setFiles}}>\n        <Header />\n        <Routes>\n          <Route path='/' element={<Content />}/>\n        </Routes>\n      </FileContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAAQA,MAAM,EAAEC,KAAK,QAAO,kBAAkB;AAC9C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,SAASC,aAAa,QAAQ,OAAO;;AAErC;AACA,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,SAASM,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,aAAa,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAErD;EACAD,SAAS,CAAC,MAAK;IACX,MAAMe,QAAQ,GAAG,MAAAA,CAAA,KAAW;MACxB,MAAMC,QAAQ,GAAG,MAAMd,QAAQ,CAACe,GAAG,CAAC,QAAQ,EAAE;QAACC,KAAK,EAAE;MAA2B,CAAC,CAAC;MACnF,IAAGF,QAAQ,EAAC;QACVJ,QAAQ,CAACI,QAAQ,CAACG,IAAI,CAAC;MACzB;IACJ,CAAC;IAEDJ,QAAQ,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAER,oBACER,OAAA;IAAKa,SAAS,EAAC,qEAAqE;IAAAC,QAAA,eAClFd,OAAA,CAACC,WAAW,CAACc,QAAQ;MAACC,KAAK,EAAE;QAACZ,KAAK;QAAEC;MAAQ,CAAE;MAAAS,QAAA,gBAC7Cd,OAAA,CAACH,MAAM;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVpB,OAAA,CAACT,MAAM;QAAAuB,QAAA,eACLd,OAAA,CAACR,KAAK;UAAC6B,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEtB,OAAA,CAACF,OAAO;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACW;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEV;AAACjB,EAAA,CA1BQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}